h2
  |Overload transactions

= form_tag operator_fixed_campaign_index_path, method: :get do
  .checkbox
    label
      = check_box_tag :overload, true, params[:overload]
      | Transactions that buy more than max BTC limited per person
  .checkbox
    label
      = check_box_tag :overload_1500, true, params[:overload_1500]
      | Transactions that buy more than 1500 BTC
  = submit_tag "Search", class: "btn btn-success"
br
br
= paginate @histories_page
p
  |Total BTC:&nbsp;
  b = number_to_currency(@histories.sum(:value), unit: "BTC", format: "%n %u", precision: 8)

table.table
  thead
    tr
      th Email
      th BTC Adddress
      th Miskre address
      th BTC amount
      th Campaign ID
      th Transactions
  tbody
    - @histories_page.includes(:kyc_address).each do |history|
      tr
        td = history.kyc_address.email
        td = link_to history.kyc_address.address, BLOCKCHAIN_ADDRESS_URL + history.kyc_address.address, target: "_blank"
        td = history.kyc_address.mis_address
        td = history.value
        td = history.fixed_campaign_id == OVERLOAD_CAMPAIGN_ID ? "Overload 1500 BTC" : history.fixed_campaign.id
        th 
          - tx = Transaction.find(history.transaction_id).txid
          = link_to tx, BLOCKCHAIN_TRANSACTION_URL + tx.to_s, target: "_blank"
          
= paginate @histories_page
= link_to "Export Data", export_overload_campaign_operator_fixed_campaign_index_path(format: :json, overload: params[:overload], overload_1500: params[:overload_1500]), class: "btn btn-primary"
br
br
- if @first_time.present?
  p 
   |The first transaction that overload 1500 BTC created at:&nbsp;
   = @first_time